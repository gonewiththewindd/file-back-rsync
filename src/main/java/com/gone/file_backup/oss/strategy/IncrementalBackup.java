package com.gone.file_backup.oss.strategy;

/**
 * 增量备份：<br/>
 *  考虑一份文件字节序列组成 abcdefghijklmn
 *  现以1MB大小为切割单位进行切割，切割后的字节序列为 abcd|efgh|ijkl|mn
 *  首次同步，以该文件的所有片段为基准文件，存储在基准目录 base
 *  后续触发文件修改，分为几种情况
 *      a.小范围修改，可能改动范围在一个片段以内
 *      b.小范围修改但是可能跨了多个片段
 *      c.整个文件不同片段多处遭到修改
 *  这里有个严重的问题就是文件一旦发生修改，修改位置的后续的字节位置都会发生变更，导致信息摘要完全不一样
 *  也就是虽然某些序列是一样的但是发生了序列移位，向前或向后
 *      abcd|efgh|ijkl|mn  ->  abcd|eh|ijkl|mn  (fg位置的内容发生删减)
 *      按照1MB的固定大小进行切分： abcd|ehij|klmn
 *  可以看到，只有改动位置的前半部分是一致的，改动后的 hijklmn发生了移位，但是序列顺序是一致的。
 *
 *  另一种策略是只记录变更的字节序列，比如第1001~2000的字节序列变更，这一部分存档为变更delta0
 *  恢复的时候以基准文件为base，再应用后续得修改版本deta0, delta1, ... , delta n到基准文件，从未获得最终的版本文件
 *  有一个问题，就是要监测到被修改文件发生修改变更的序列， 换句话说就是要通过最近备份文件和修改文件比较，得出变动序列
 *  TODO 这不还是相当于获取到所有的文件？
 */
public class IncrementalBackup {




}
